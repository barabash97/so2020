#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef char Stringa[30];

typedef struct {
    Stringa nome;
    int flag;
} record_bin;


int creaBinario (Stringa nome_file, Stringa frutto){
    int fg, count;
    Stringa nome, f1, f2, f3;
    FILE* fp = fopen(nome_file,"r");
    FILE* fp2 = fopen("frutto_preferito.dat","ab");
    
    while (!feof(fp)) {
        fscanf (fp, "%s %s %s %s\n", nome, f1, f2, f3);
        record_bin rb;
        fg = (strcmp(frutto,f1)==0) || (strcmp(frutto,f2)==0) || (strcmp(frutto,f3)==0);
        
        if (fg) count++;
        
        strcpy(rb.nome, nome);
        rb.flag = fg;
        
        fwrite(&rb, 1, sizeof(record_bin), fp2);
        
    } 
    
    fclose(fp);
    fclose(fp2);
    
    return count;
    
}

void leggibinario(){
    FILE* fp = fopen("frutto_preferito.dat","rb");
    
    while (!feof(fp)) {
        record_bin rb;
        fread(&rb, 1, sizeof(record_bin), fp);
        printf("%s %d\n",rb.nome,rb.flag);
        
    }
    
    
    fclose(fp);
}
        
        
int main(void) {
    creaBinario("persone_frutta.txt","pera");
    leggibinario();
    exit(0);

       }#include <stdlib.h>
#include <stdio.h>
#include <string.h>

typedef char Stringa[30];

typedef struct {
    Stringa nome;
    float media;
} record_binario;

void creaBinarioNegativo() {
    FILE *fp = fopen("nomi.txt", "r");
    FILE *fp2 = fopen("persone.dat", "wb");

    Stringa nome;

    if (fp == NULL) {
        printf("file non esiste\n");
        exit(0);
    }

    while (!feof(fp)) {
        int count = 0;
        int somma = 0;
        int a1, a2, a3 = 0;
        fscanf(fp, "%s %d %d %d\n", nome, &a1, &a2, &a3);

        if (a1 < 0) {
            somma += a1;
            count++;
        }

        if (a2 < 0) {
            somma += a2;
            count++;
        }

        if (a3 < 0) {
            somma += a3;
            count++;
        }

        if (count > 0) {
            record_binario rb;
            strcpy(rb.nome, nome);
            rb.media = (float) (somma / count);
            fwrite(&rb, sizeof(rb), 1, fp2);
        }
    }

    fclose(fp);
    fclose(fp2);
}

void leggiBinario() {
    FILE *fp = fopen("persone.dat", "rb");
    if (fp == NULL) {
        printf("file non esiste\n");
        exit(0);
    }
    printf("\nSTAMPA\n\n\n");
    while (!feof(fp)) {
    
        record_binario rb;
        fread(&rb, sizeof(rb), 1, fp);
        printf("%s %.2f\n", rb.nome, rb.media);
    }

    fclose(fp);
}

int main() {
    creaBinarioNegativo();
    leggiBinario();
    return 0;
}#include <stdio.h>
#include <string.h>

typedef char string[30];

string voti[11] = {"0","1","2","3","4","5","6","7","8","9","10"};

//inserisci un nome e un voto e ritorna il numero di elementi
int inserisci(string nome, int voto, string nomeFile) {
	int numelem = 0;
	string temp;

	if((voto<=10) && (voto>=0)) {
		FILE* fp = fopen(nomeFile, "a+");
		fprintf(fp, "%s %d\n",nome, voto);

		//conta il numero di elementi nel file
		fseek(fp, 0, SEEK_SET);
		while(!feof(fp)) {
			fscanf(fp, "%s %d\n", temp, &voto);
			numelem++;
		}

		fclose(fp);
	}

	else
		numelem = -1;  // errore di inserimento

	return numelem;
}

//cambia il voto all'occorrenza col nome e voto corrente specificati
void cambiaVoto(string nome, int vecchio_voto, int nuovo_voto, string nomeFile) {
	long pos;
	int voto;
	int test = 0;
	string temp;

	if((nuovo_voto<=10)&&(nuovo_voto>=0)) {
		FILE* fp = fopen(nomeFile, "r+");

		while((!feof(fp))&&(!test)) {
			pos = ftell(fp);

			if(fscanf(fp, "%s %d\n", temp, &voto) !=EOF)
				if(strcmp(nome, temp)==0 && voto==vecchio_voto) {
					fseek(fp, pos, SEEK_SET);
					fprintf(fp, "%s %d\n", nome, nuovo_voto);
					test = 1;
				}
		}

		fclose(fp);
	}
	else 
		printf("errore specifica voto\n");
}

//ritorna il valore max
int maxVoto(string nomeFile) {
	int voto, max = 0;
	string nome;
	FILE* fp = fopen(nomeFile, "r");
	if(!fp)
		return -1; // errore lettura del file
	while(!feof(fp) && max<10) {
		fscanf(fp, "%s %d\n", nome, &voto);
		if(voto>max)
			max = voto;
	}
	fclose(fp);
	return max;
}

//crea file piccoli
void creaFile(string nomeFile) {
	string temp;
	int voto;

	FILE* fp = fopen(nomeFile, "r");
	while(!feof(fp)) {
		fscanf(fp, "%s %d\n", temp, &voto);
		string newFile;
		strpy(newFile, nomeFile);
		strcat(newFile, "-");
		strcat(newFile, voti[voto]);
		strcat(newFile, ".txt");
		inserisci(temp, voto, newFile);
	}
}